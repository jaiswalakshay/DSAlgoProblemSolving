package com.akshay.dp;

import org.junit.Test;

/**
 * Created by 1596272 on 10/12/2020.
 */
public class SubsetSum {

    int subsetProble(int nums[], int sum, int i, int count) {

        if (i == nums.length) {
            if (sum == 0)
                return count + 1;
            else
                return count;
        }
        return subsetProble(nums, sum, i + 1, count) + subsetProble(nums, sum - nums[i], i + 1, count);

    }


    boolean subsetProble(int nums[], int sum, int i) {

        if (i == nums.length) {
            if (sum == 0)
                return true;
            else
                return false;
        }
        return subsetProble(nums, sum, i + 1) || subsetProble(nums, sum - nums[i], i + 1);

    }

    @Test
    public void testSubsetSumCount() {
        int nums[] = {1, 2, 3, 4, 5, 7};
        int sum = 5;
        System.out.println("Ans: " + subsetProble(nums, sum, 0, 0));

    }

    @Test
    public void testSubsetSumPresent() {
        int nums[] = {1, 2, 3, 4, 5, 7};
        int sum = 5;
        System.out.println("Ans: " + subsetProble(nums, sum, 0));

    }

    @Test
    public void seperateEvenOdds(){
        int[] nums= {1,2,3,4,5,6,7,8,9};
        int i=0;
        int j=nums.length-1;


    }
}
